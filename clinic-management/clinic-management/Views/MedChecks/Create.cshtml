@model clinic_management.Models.MedCheck

@{
    ViewBag.Title = "Create";
}
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Medical Check-Up</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>

<div class="row">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.StaffID, "Staff Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.StaffID, (SelectList)ViewBag.ddlStaff, "Select Medical Staff", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PatientID, "Patient Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.PatientID, (SelectList)ViewBag.ddlPatient, "Select Patient", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PatientID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateTimeOfVisit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    <div class="input-group date" data-date-format="dd.mm.yyyy">
                        @Html.EditorFor(model => model.DateTimeOfVisit, new { htmlAttributes = new { @class = "form-control", placeholder = "YYYY-MM-DD" } })
                        <div class="input-group-addon">
                            <span class="glyphicon glyphicon-th"></span>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.DateTimeOfVisit, "", new { @class = "text-danger" })
                </div>
            </div>
            <script>
                $(function () {
                    $('.input-group.date').datepicker({
                        format: 'yyyy-mm-dd'
                    });
                });
            </script>

            <div class="form-group">
                @Html.LabelFor(model => model.MedCheckType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.MedCheckType, new List<SelectListItem>
                    {
                        new SelectListItem{ Text="For Check-up", Value = "1" },
                        new SelectListItem{ Text="For Medical Clearance", Value = "2" },
                    },
                    "Select the purpose of visit")
                    @Html.ValidationMessageFor(model => model.MedCheckType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Complaint, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Complaint, 3, 98, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Complaint, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Diagnosis, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Diagnosis, 3, 98, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.Diagnosis, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Treatment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Treatment, 3, 98, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Treatment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Remarks, 3, 98, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.MedCheckStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.MedCheckStatus, new List<SelectListItem>
                    {
                        new SelectListItem{ Text="Ongoing", Value = "1" },
                        new SelectListItem{ Text="Done", Value = "2" },
                        new SelectListItem{ Text="Cancelled", Value = "3" },
                    },
                    "Select the status of visit")
                    @Html.ValidationMessageFor(model => model.MedCheckStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                    @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    }

</div>
<style>
    .multi-line {
        max-width: 80%;
    }
</style>