@model clinic_management.Models.ModelContainer

@{
    ViewBag.Title = "Index";
}   

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Inventory</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>

<div class="row">
    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#medicines" onclick="SetMedicineType(this)">Medicines</a></li>
        <li><a data-toggle="tab" href="#utensils" onclick="SetMedicineType(this)">Utensils</a></li>
    </ul>

    <div class="tab-content">
        <div id="medicines" class="tab-pane fade in active">
            <br />
            <div class="btn-group">
                <button type="button" class="btn btn-default" data-toggle="modal" data-target="#myModal">Add Medicine</button>
                <button type="button" class="btn btn-default" disabled id="medicineDelete">Delete</button>
                <button type="button" class="btn btn-default">Refresh</button>
            </div>
            <br />
            <br />
            <table class="table" id="tableMedicines">
                <thead>
                    <tr>
                        <th></th>
                        <th>Item ID</th>
                        <th>Name</th>
                        <th>Quantity</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Medicine)
                    {
                        <tr>
                            <td>
                                @Html.CheckBox(item.ItemID.ToString(), new { value = item.ItemID, onclick = "SetDelete(this)" })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ItemID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ItemName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ItemQuantity)
                            </td>
                            <td>
                                @Html.ActionLink("Add Supply", "Edit", new { id = item.ItemID }, new { @class = "btn btn-default" })
                                @Html.ActionLink("View Supply", "Details", new { id = item.ItemID }, new { @class = "btn btn-default" })
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.ItemID })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div id="utensils" class="tab-pane fade">
            <br />
            <div class="btn-group">
                <button type="button" class="btn btn-default" data-toggle="modal" data-target="#myModal">Add Utensil</button>
                <button type="button" class="btn btn-default" disabled id="medicineUtensil">Delete</button>
                <button type="button" class="btn btn-default">Refresh</button>
            </div>
            <br />
            <br />
            <table class="table" id="tableUtensils">
                <thead>
                    <tr>
                        <th></th>
                        <th>Item ID</th>
                        <th>Name</th>
                        <th>Quantity</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Utensil)
                    {
                        <tr>
                            <td>
                                @Html.CheckBox(item.ItemID.ToString(), new { value = item.ItemID, onclick = "SetDelete(this)" })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ItemID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ItemName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ItemQuantity)
                            </td>
                            <td>
                                @Html.ActionLink("Add Supply", "Edit", new { id = item.ItemID }, new { @class = "btn btn-default" })
                                @Html.ActionLink("View Supply", "Details", new { id = item.ItemID }, new { @class = "btn btn-default" })
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.ItemID })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal Add Medicine -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add</h4>
            </div>
            @using (Html.BeginForm("Create", "Inventory", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="modal-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <label class="control-label col-md-4">Name</label>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Item.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Item.ItemName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" style="display: none;">
                            @Html.LabelFor(model => model.Item.ItemType, "Medicine Type", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Item.ItemType, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Item.ItemType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                </div>
            }
        </div>

    </div>
</div>

<!-- Delete Form -->
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}

<script>
    $(document).ready(function () {
        $('#tableMedicines').DataTable();
        $('#tableUtensils').DataTable();

        $('#Item_ItemType').val("Medicine");
    });

    function SetMedicineType(selectedTab) {
        if (selectedTab.text == "Medicines") {
            $('#Item_ItemType').val("Medicine");
        } else if (selectedTab.text == "Utensils") {
            $('#Item_ItemType').val("Utensil");
        }
    }

    var arrID = [];

    function SetDelete(selectedRow) {
        if (selectedRow.checked) {
            arrID.push(selectedRow.value);
        } else {
            var index = arrID.indexOf(selectedRow.Value);
            arrID.splice(index, 1);
        }

        if (arrID.length > 0) {
            $('#medicineDelete').prop('disabled', false);
            $('#medicineUtensil').prop('disabled', false);
        } else if (arrID.length == 0) {
            $('#medicineDelete').prop('disabled', true);
            $('#medicineUtensil').prop('disabled', true);
        }
    }

    $("#medicineDelete, #medicineUtensil").click(function () {
        var form = $('#__AjaxAntiForgeryForm');
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        $.ajax({
            type: "POST",
            url: "Inventory/DeleteItem",
            data: {
                __RequestVerificationToken: token,
                id: arrID
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
            },
            success: function (result) {
                if (result.status) {
                    location.reload();
                }
            }
        });
    });
</script>