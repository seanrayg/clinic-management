@model clinic_management.Models.Staff

@{
    ViewBag.Title = "Create";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">User Accounts</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>

<div class="row">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.StaffID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.StaffID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StaffID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StaffLast, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.StaffLast, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StaffLast, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StaffFirst, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.StaffFirst, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StaffFirst, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StaffMid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.StaffMid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StaffMid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StaffGender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    <input type="radio" name="gender" value="Female" id="gender_female" onchange="setGender(this)" /> Female
                    <br />
                    <input type="radio" name="gender" value="Male" id="gender_male" onchange="setGender(this)" /> Male
                    @Html.EditorFor(model => model.StaffGender, new { htmlAttributes = new { @class = "form-control", style = "display: none;" } })
                    @Html.ValidationMessageFor(model => model.StaffGender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StaffPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.StaffPassword, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                    @Html.ValidationMessageFor(model => model.StaffPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StaffJoinedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    <div class="input-group date" data-date-format="dd.mm.yyyy">
                        @Html.EditorFor(model => model.StaffJoinedDate, new { htmlAttributes = new { @class = "form-control", placeholder = "YYYY-MM-DD" } })
                        <div class="input-group-addon">
                            <span class="glyphicon glyphicon-th"></span>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.StaffJoinedDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <script>
                $(function () {
                    $('.input-group.date').datepicker({
                        format: 'yyyy-mm-dd'
                    });
                });
            </script>

            <div class="form-group">
                @Html.LabelFor(model => model.UserTypeID, "UserTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownList("UserTypeID", null, htmlAttributes: new { @class = "form-control", onchange = "SetID()" })
                    @Html.ValidationMessageFor(model => model.UserTypeID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

<script>
    $(document).ready(function () {
        SetID();
    });

    function setGender(radio_button) {
        $('#StaffGender').val(radio_button.value);
    }

    function SetID() {
        var e = document.getElementById("UserTypeID");
        var strUserType = e.options[e.selectedIndex].text;

        if (strUserType == "Admin") {

            $('#StaffID').val('@ViewBag.AdminID');

        } else if (strUserType == "Nurse") {

            $('#StaffID').val('@ViewBag.NurseID');

        } else if (strUserType == "Doctor") {

            $('#StaffID').val('@ViewBag.DoctorID');

        } else if (strUserType == "Receptionist") {

            $('#StaffID').val('@ViewBag.ReceptionistID');

        }
    }
</script>
